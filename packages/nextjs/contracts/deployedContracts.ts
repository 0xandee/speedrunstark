/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  sepolia: {
    HelloStarknet: {
      address:
        "0x06ebc9ea691324adae48e0ebfd858fb9cdb2052f16fc9337518b6e9ac78b4576",
      abi: [
        {
          type: "impl",
          name: "HelloStarknetImpl",
          interface_name: "contracts::helloStarknet::IHelloStarknet",
        },
        {
          type: "interface",
          name: "contracts::helloStarknet::IHelloStarknet",
          items: [
            {
              type: "function",
              name: "increase_balance",
              inputs: [
                {
                  name: "amount",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_balance",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_balance6",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_balance_increment",
              inputs: [
                {
                  name: "amount",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::helloStarknet::HelloStarknet::Event",
          kind: "enum",
          variants: [],
        },
      ],
    },
    SimpleStorage: {
      address:
        "0x0131e61782d2a33b8c01bbe910ef9434e0d921c58c203ade5a18329e73c43a8f",
      abi: [
        {
          type: "impl",
          name: "SimpleStorageImpl",
          interface_name: "contracts::simpleStorage::ISimpleStorage",
        },
        {
          type: "interface",
          name: "contracts::simpleStorage::ISimpleStorage",
          items: [
            {
              type: "function",
              name: "get_name",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_name",
              inputs: [
                {
                  name: "name",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "name",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::simpleStorage::SimpleStorage::Event",
          kind: "enum",
          variants: [],
        },
      ],
    },
    Vote: {
      address:
        "0x07e91c1964d3da4166c2cb9a15ed23fd98ed3ff3db2ba94359696f9dffa23e9c",
      abi: [
        {
          type: "impl",
          name: "VoteImpl",
          interface_name: "contracts::vote::VoteTrait",
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::vote::VoteTrait",
          items: [
            {
              type: "function",
              name: "get_vote_status",
              inputs: [],
              outputs: [
                {
                  type: "(core::integer::u8, core::integer::u8, core::integer::u8, core::integer::u8)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "voter_can_vote",
              inputs: [
                {
                  name: "user_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_voter_registered",
              inputs: [
                {
                  name: "address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "vote",
              inputs: [
                {
                  name: "vote",
                  type: "core::integer::u8",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "voter_1",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "voter_2",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "voter_3",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::vote::Vote::VoteCast",
          kind: "struct",
          members: [
            {
              name: "voter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "vote",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::vote::Vote::UnauthorizedAttempt",
          kind: "struct",
          members: [
            {
              name: "unauthorized_address",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::vote::Vote::Event",
          kind: "enum",
          variants: [
            {
              name: "VoteCast",
              type: "contracts::vote::Vote::VoteCast",
              kind: "nested",
            },
            {
              name: "UnauthorizedAttempt",
              type: "contracts::vote::Vote::UnauthorizedAttempt",
              kind: "nested",
            },
          ],
        },
      ],
    },
  },
} as const;

export default deployedContracts;
