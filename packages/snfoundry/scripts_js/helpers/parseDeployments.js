const fs = require("fs");
const path = require("path");
const prettier = require("prettier");

const TARGET_DIR = path.join(__dirname, "../../../nextjs/contracts");
const deploymentsDir = path.join(__dirname, "../../deployments");
const files = fs.readdirSync(deploymentsDir);

const generatedContractComment = `/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-stark/contract";
`;

const getContractDataFromDeployments = () => {
  const allContractsData = {};

  files.forEach((file) => {
    if (path.extname(file) === ".json") {
      const filePath = path.join(deploymentsDir, file);
      const content = JSON.parse(fs.readFileSync(filePath, "utf8"));
      const network = path.basename(file, ".json");

      Object.entries(content).forEach(([contractName, contractData]) => {
        try {
          allContractsData[network] = {
            ...allContractsData[network],
            [contractName]: {
              address: contractData.address,
            },
          };
        } catch (e) {}
      });
    }
  });

  return allContractsData;
};

const generateTsContracts = () => {
  const allContractsData = getContractDataFromDeployments();

  const fileContent = Object.entries(allContractsData).reduce(
    (content, [network, networkConfig]) => {
      // Use chainId directly as it is already a hex string
      return `${content}${network}:${JSON.stringify(networkConfig, null, 2)},`;
    },
    ""
  );

  if (!fs.existsSync(TARGET_DIR)) {
    fs.mkdirSync(TARGET_DIR);
  }

  fs.writeFileSync(
    path.join(TARGET_DIR, "deployedContracts.ts"),
    prettier.format(
      `${generatedContractComment}\n\nconst deployedContracts = {${fileContent}} as const;\n\nexport default deployedContracts satisfies GenericContractsDeclaration;`,
      {
        parser: "typescript",
      }
    )
  );

  console.log(
    `üìù Updated TypeScript contract definition file on ${TARGET_DIR}/deployedContracts.ts`
  );
};

generateTsContracts();
